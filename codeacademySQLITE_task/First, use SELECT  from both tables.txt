First, use SELECT * from both tables and use your knowledge of queries and aggregate functions to get to know the data:

Q. What are the Top 25 schools (.edu domains)?
ANs.
SELECT email_domain, COUNT(*) AS user_count FROM users WHERE email_domain LIKE '%.edu' GROUP BY email_domain ORDER BY user_count DESC LIMIT 25;

Q. How many .edu learners are located in New York?
 ans.
SELECT COUNT(*) AS edu_learners_in_new_york FROM users WHERE email_domain LIKE '%.edu' AND postal LIKE 'NY%';

Que. The mobile_app column contains either mobile-user or NULL. How many of these Codecademy learners are using the mobile app?
ans. mobile_app_user
     
SELECT COUNT(*) AS mobile_app_users FROM users WHERE mobile_app = 'mobile-user';

Q.  using this function, query for the sign up counts for each hour.
ans.
SELECT strftime('%H', sign_up_at) AS sign_up_hr, COUNT(*) AS sign_up_count FROM users GROUP BY sign_up_hr ORDER BY sign_up_hr;

question . 4 Join the two tables using JOIN and then see what you can dig out of the data!

A). Do different schools (.edu domains) prefer different courses?
    
answer.
"Join the tables and focus on .edu domains"
SELECT email_domain,
AVG(learn_cpp) AS cpp_avg,
       AVG(learn_sql) AS sql_avg,
       AVG(learn_html) AS html_avg,
       AVG(learn_javascript) AS js_avg,
       AVG(learn_java) AS java_avg
FROM users JOIN progress ON users.user_id = progress.user_id WHERE email_domain LIKE "%.edu" GROUP BY email_domain ORDER BY email_domain;

question 4.B) What courses are the New Yorkers students taking?
  
SELECT  'New York' AS city,
AVG(learn_cpp) AS cpp_avg,
       AVG(learn_sql) AS sql_avg,
       AVG(learn_html) AS html_avg,
       AVG(learn_javascript) AS js_avg,
       AVG(learn_java) AS java_avg
FROM users JOIN progress ON users.user_id = progress.user_id WHERE postal LIKE 'NY%';

question 4.c)  What courses are the Chicago students taking?

SELECT  u.city, 
       COUNT(CASE WHEN p.learn_cpp = 'completed' THEN 1 END) AS cpp_count,
       COUNT(CASE WHEN p.learn_sql = 'completed' THEN 1 END) AS sql_count,
       COUNT(CASE WHEN p.learn_html = 'completed' THEN 1 END) AS html_count,
       COUNT(CASE WHEN p.learn_javascript = 'completed' THEN 1 END) AS javascript_count,
       COUNT(CASE WHEN p.learn_java = 'completed' THEN 1 END) AS java_count
FROM users u JOIN progress p ON u.user_id = p.user_id WHERE LOWER(u.city) = 'chicago' GROUP BY u.city;


=====================================COMPLETED================================================
